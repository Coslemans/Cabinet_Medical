<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AQH/2Q==
</value>
  </data>
</root>